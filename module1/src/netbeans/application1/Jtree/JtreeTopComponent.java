/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package netbeans.application1.Jtree;

import java.awt.Event;
import javax.swing.JScrollPane;
import java.awt.event.ComponentListener;
import java.util.HashSet;
import java.util.Set;
import javax.swing.JTree;
import javax.swing.event.TreeSelectionListener;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.TreeSelectionModel;
import org.netbeans.api.settings.ConvertAsProperties;
import org.openide.awt.ActionID;
import org.openide.awt.ActionReference;
import org.openide.util.Lookup;
import org.openide.windows.TopComponent;
import org.openide.util.NbBundle.Messages;
import org.openide.util.Utilities;

/**
 * Top component which displays something.
 */
@ConvertAsProperties(
        dtd = "-//netbeans.application1.Jtree//Jtree//EN",
        autostore = false)
@TopComponent.Description(
        preferredID = "JtreeTopComponent",
        //iconBase="SET/PATH/TO/ICON/HERE", 
        persistenceType = TopComponent.PERSISTENCE_ALWAYS)
@TopComponent.Registration(mode = "explorer", openAtStartup = true)
@ActionID(category = "Window", id = "netbeans.application1.Jtree.JtreeTopComponent")
@ActionReference(path = "Menu/Window" /*, position = 333 */)
@TopComponent.OpenActionRegistration(
        displayName = "#CTL_JtreeAction",
        preferredID = "JtreeTopComponent")
@Messages({
    "CTL_JtreeAction=Jtree",
    "CTL_JtreeTopComponent=Jtree Window",
    "HINT_JtreeTopComponent=This is a Jtree window"
})
public final class JtreeTopComponent extends TopComponent {

    public JtreeTopComponent() {
        initComponents();

        setName(Bundle.CTL_JtreeTopComponent());
        setToolTipText(Bundle.HINT_JtreeTopComponent());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        DefaultMutableTreeNode top = new DefaultMutableTreeNode("Proyect Structure");
        fill(top);
        jTree1 = jTree1 = new JTree(top);

        ;

        jTree1.addTreeSelectionListener(new javax.swing.event.TreeSelectionListener() {
            public void valueChanged(javax.swing.event.TreeSelectionEvent evt) {
                jTree1ValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(jTree1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTree1ValueChanged(javax.swing.event.TreeSelectionEvent evt) {//GEN-FIRST:event_jTree1ValueChanged
        System.out.println(jTree1.getLastSelectedPathComponent().toString());
       if(jTree1.getLastSelectedPathComponent().toString().equals("Stage 2")){
           System.out.println("Open Stage 2 Editor");

       }else{
       }
        //Variable definitions
     
        // TODO add your handling code here:
    }//GEN-LAST:event_jTree1ValueChanged

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTree jTree1;
    // End of variables declaration//GEN-END:variables
private Lookup.Result<Event> result = null;
    @Override
    public void componentOpened() {
       // TODO add custom code on component opening
    }

    @Override
    public void componentClosed() {
        // TODO add custom code on component closing
    }

    void writeProperties(java.util.Properties p) {
        // better to version settings since initial version as advocated at
        // http://wiki.apidesign.org/wiki/PropertyFiles
        p.setProperty("version", "1.0");
        // TODO store your settings
    }

    void readProperties(java.util.Properties p) {
        String version = p.getProperty("version");
        // TODO read your settings according to their version
    }

    private void fill(DefaultMutableTreeNode top) {
        DefaultMutableTreeNode stage1 = new DefaultMutableTreeNode("Stage 1");
        DefaultMutableTreeNode stage1_1 = new DefaultMutableTreeNode("Stage 1.1");
        DefaultMutableTreeNode stage2 = new DefaultMutableTreeNode("Stage 2");
        
        stage1.add(stage1_1);
        top.add(stage1);
        top.add(stage2);
    }
}
